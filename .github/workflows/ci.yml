name: BFF Services CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            */node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            
      # Install dependencies for all BFFs
      - name: Install Platform BFF dependencies
        run: |
          cd platform-bff
          npm ci
          
      - name: Install Operator BFF dependencies  
        run: |
          cd operator-bff
          npm ci
          
      - name: Install Association BFF dependencies
        run: |
          cd association-bff
          npm ci
          
      # Linting & Formatting
      - name: Run ESLint on Platform BFF
        run: |
          cd platform-bff
          npm run lint
          
      - name: Run ESLint on Operator BFF
        run: |
          cd operator-bff
          npm run lint
          
      - name: Run ESLint on Association BFF
        run: |
          cd association-bff
          npm run lint
          
      - name: Check Prettier formatting
        run: |
          npx prettier --check "*/src/**/*.{ts,js,json}"

  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Cache node modules  
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            */node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            
      - name: Install dependencies
        run: |
          cd platform-bff && npm ci
          cd ../operator-bff && npm ci
          cd ../association-bff && npm ci
          
      # TypeScript compilation
      - name: TypeScript compilation check
        run: |
          cd platform-bff && npx tsc --noEmit
          cd ../operator-bff && npx tsc --noEmit  
          cd ../association-bff && npx tsc --noEmit
          
      # Unit Tests
      - name: Run Platform BFF tests
        run: |
          cd platform-bff
          npm run test:cov
          
      - name: Run Operator BFF tests
        run: |
          cd operator-bff
          npm run test:cov
          
      - name: Run Association BFF tests  
        run: |
          cd association-bff
          npm run test:cov
          
      # Integration Tests (if exist)
      - name: Run Platform BFF e2e tests
        run: |
          cd platform-bff
          npm run test:e2e || true
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./platform-bff/coverage
          flags: platform-bff
          
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      - name: Security audit Platform BFF
        run: |
          cd platform-bff
          npm audit --audit-level=critical
          
      - name: Security audit Operator BFF  
        run: |
          cd operator-bff
          npm audit --audit-level=critical
          
      - name: Security audit Association BFF
        run: |
          cd association-bff
          npm audit --audit-level=critical

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [quality, test]
    
    strategy:
      matrix:
        service: [platform-bff, operator-bff, association-bff]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build ${{ matrix.service }} image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: false
          tags: association-platform/${{ matrix.service }}:test
          cache-from: type=gha,scope=${{ matrix.service }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}
          
      - name: Test container startup
        run: |
          docker run -d --name ${{ matrix.service }}-test association-platform/${{ matrix.service }}:test
          sleep 10
          docker logs ${{ matrix.service }}-test
          docker stop ${{ matrix.service }}-test
